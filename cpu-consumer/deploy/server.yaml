apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: deployment-reader
rules:
- apiGroups:
  - ""
  resources:
  - deployments
  - pods
  verbs:
  - get
  - list
---
kind: ServiceAccount
apiVersion: v1
metadata:
  name: sample-server
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: sample-server-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: deployment-reader
subjects:
- kind: ServiceAccount
  name: sample-server
  namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sample-server
  name: sample-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-server
  template:
    metadata:
      labels:
        app: sample-server
    spec:
      serviceAccountName: sample-server
      containers:
      - image: gcr.io/maciekpytel-dev-playground/server:0.0.2
        command:
        - /bin/sh
        - -c
        - ./server
        - --deployment-name=sample-server
        - --pod-namespace=$(POD_NAMESPACE)
        - --request-duration=100m
        name: sample-server
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        ports:
        - name: web
          containerPort: 1234
        resources:
          requests:
            cpu: "200m"
          limits:
            cpu: "400m"
---
apiVersion: v1
kind: Service
metadata:
  name: sample-server
  labels:
    app: sample-server
spec:
  ports:
  - name: web
    port: 80
    targetPort: 1234
  selector:
    app: sample-server
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: sample-server
  labels:
    service-monitor: sample-server
spec:
  selector:
    matchLabels:
      app: sample-server
  endpoints:
  - port: web
